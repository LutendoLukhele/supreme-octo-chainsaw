{
  "tools": [
    {
      "name": "request_missing_parameters",
      "description": "Use this tool ONLY when required parameters for another tool are missing and cannot be reasonably defaulted. Provide the intended tool and the list of missing required parameter names.",
      "providerConfigKey": "__META__",
      "category": "Meta",
      "parameters": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "intended_tool_name": {
                "type": "string",
                "description": "The exact name of the tool the user likely intended to use (e.g., 'fetch_entity')."
              },
              "missing_params": {
                "type": "array",
                "items": { "type": "string" },
                "description": "A list of the exact names of REQUIRED parameters that are missing for the 'intended_tool_name'."
              },
              "clarification_question": {
                "type": "string",
                "description": "A clear question to ask the user to obtain the missing parameters, phrased from the assistant's perspective."
              }
            },
            "required": [
              "intended_tool_name",
              "missing_params",
              "clarification_question"
            ]
          }
        },
        "required": ["input"]
      }
    },
    {
      "name": "fetch_emails",
      "description": "Fetch Gmail emails with advanced filtering options based on criteria like sender, subject, date, labels, or attachments.",
      "providerConfigKey": "google-mail",
      "category": "Email",
      "parameters": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "operation": {
                "type": "string",
                "enum": ["fetch"],
                "description": "Specifies the operation to perform, always 'fetch' for this tool."
              },
              "backfillPeriodMs": {
                "type": "integer",
                "description": "Optional: How far back in time to search for emails, specified in milliseconds.",
                "optional": true
              },
              "filters": {
                "type": "object",
                "description": "Optional: A set of criteria to filter the emails.",
                "optional": true,
                "properties": {
                  "sender": {
                    "type": "string",
                    "description": "Filter by the sender's email address.",
                    "optional": true
                  },
                  "recipient": {
                    "type": "string",
                    "description": "Filter by the recipient's email address.",
                    "optional": true
                  },
                  "subject": {
                    "type": "object",
                    "description": "Filter by keywords or phrases in the email subject.",
                    "optional": true,
                    "properties": {
                      "contains": { "type": "array", "items": { "type": "string" }, "optional": true, "description": "Subject must contain ALL these keywords." },
                      "startsWith": { "type": "string", "optional": true, "description": "Subject must start with this text." },
                      "endsWith": { "type": "string", "optional": true, "description": "Subject must end with this text." },
                      "exact": { "type": "string", "optional": true, "description": "Subject must match exactly." }
                    }
                  },
                  "dateRange": {
                    "type": "object",
                    "description": "Filter emails received within a specific date range.",
                    "optional": true,
                    "properties": {
                      "after": { "type": "string", "format": "date-time", "optional": true, "description": "Include emails received after this ISO 8601 timestamp." },
                      "before": { "type": "string", "format": "date-time", "optional": true, "description": "Include emails received before this ISO 8601 timestamp." }
                    }
                  },
                  "hasAttachment": { "type": "boolean", "optional": true, "description": "Filter for emails that have attachments." },
                  "labels": { "type": "array", "items": { "type": "string" }, "optional": true, "description": "Filter by Gmail labels (e.g., INBOX, IMPORTANT, or custom labels)." },
                  "includeBody": { "type": "boolean", "optional": true, "description": "Whether to include the full email body in the result (can be large). Defaults to false." },
                  "excludeCategories": { "type": "array", "items": { "type": "string" }, "optional": true, "description": "Gmail categories to exclude (e.g., Promotions, Social, Updates)." },
                  "isRead": { "type": "boolean", "optional": true, "description": "Filter based on read/unread status (true for read, false for unread)." },
                  "isImportant": { "type": "boolean", "optional": true, "description": "Filter for emails marked as important by Gmail." },
                  "includeSpam": { "type": "boolean", "optional": true, "description": "Whether to include emails from the Spam folder. Defaults to false." },
                  "includeTrash": { "type": "boolean", "optional": true, "description": "Whether to include emails from the Trash folder. Defaults to false." },
                  "limit": { "type": "integer", "description": "Maximum number of emails to return (default/max may vary).", "optional": true },
                  "offset": { "type": "integer", "description": "Number of emails to skip (for pagination).", "optional": true }
                }
              }
            },
            "required": ["operation"] 
          }
        },
        "required": ["input"]
      }
    },
    {
      "name": "send_email",
      "description": "Send an email via Gmail.",
      "providerConfigKey": "google-mail",
      "category": "Email",
      "parameters": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "operation": { "type": "string", "enum": ["send"], "description": "Operation must be 'send'." },
              "to": { "type": "string", "description": "The recipient's email address." },
              "subject": { "type": "string", "description": "The subject line of the email." },
              "body": { "type": "string", "description": "The main content/body of the email." }
            },
            "required": ["operation", "to", "subject", "body"]
          }
        },
        "required": ["input"]
      }
    },
    {
      "name": "fetch_calendar_events",
      "description": "Fetch Google Calendar events from a specified calendar within a given time range.",
      "providerConfigKey": "google-calendar",
      "category": "Calendar",
      "parameters": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "calendarId": {
                "type": "string",
                "description": "The ID of the calendar to fetch events from. Defaults to 'primary'.",
                "optional": true,
                "default": "primary"
              },
              "timeMin": {
                "type": "string",
                "format": "date-time",
                "description": "Optional: The start of the time range to fetch events from (ISO 8601 format).",
                "optional": true
              },
              "timeMax": {
                "type": "string",
                "format": "date-time",
                "description": "Optional: The end of the time range to fetch events from (ISO 8601 format).",
                "optional": true
              },
              "maxResults": {
                "type": "integer",
                "description": "The maximum number of events to return.",
                "optional": true,
                "default": 10
              }
            }
          }
        },
        "required": ["input"]
      }
    },
    {
        "name": "create_calendar_event",
        "description": "Use for time-based events. Create a new event, meeting, or appointment in a Google Calendar.",
        "providerConfigKey": "google-calendar",
        "category": "Calendar",
        "parameters": {
        "type": "object",
        "properties": {
          "input": {
            "type": "object",
            "properties": {
              "calendarId": {
                "type": "string",
                "description": "The ID of the calendar to create the event in. Defaults to 'primary'.",
                "optional": true,
                "default": "primary"
              },
              "summary": {
                "type": "string",
                "description": "The title of the event."
              },
              "start": {
                "type": "string",
                "format": "date-time",
                "description": "The start time of the event (ISO 8601 format)."
              },
              "end": {
                "type": "string",
                "format": "date-time",
                "description": "The end time of the event (ISO 8601 format)."
              },
              "attendees": {
                "type": "array",
                "items": { "type": "string" },
                "description": "A list of attendee email addresses.",
                "optional": true
              },
              "description": {
                "type": "string",
                "description": "The description of the event.",
                "optional": true
              }
            },
            "required": ["summary", "start", "end"]
          }
        },
        "required": ["input"]
      }
    },
    {
  "name": "fetch_entity",
  "description": "Fetch Salesforce records (Account, Contact, Lead, Deal, etc.) with optional identifier or advanced filtering.",
  "providerConfigKey": "salesforce-2",
  "category": "CRM",
  "parameters": {
    "type": "object",
    "properties": {
      "input": {
        "type": "object",
        "properties": {
          "operation": { "type": "string", "enum": ["fetch"], "description": "Operation must be 'fetch'." },
          "entityType": {
            "type": "string",
            "enum": ["Account", "Contact", "Lead", "Deal", "Article", "Case"],
            "description": "The type of Salesforce object to fetch."
          },
          "identifier": {
            "type": "string",
            "description": "Optional: The specific ID or unique field value (like Name or Email based on entityType) to fetch a single record. Use 'all' to fetch multiple records (requires filters or uses defaults).",
            "optional": true
          },
          "identifierType": {
            "type": "string",
            "description": "Optional: Specifies which field the 'identifier' value refers to (e.g., 'Id', 'Name', 'Email'). Only needed if 'identifier' is provided and isn't an Id or 'all'.",
            "optional": true
          },
          "filters": {
            "type": "object",
            "description": "Optional: Advanced criteria for filtering records when fetching multiple. Required if 'identifier' is 'all' or omitted.",
            "optional": true,
            "properties": {
              "conditions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The API name of the field to filter on. IMPORTANT: For fields on related objects, use dot notation, for example: 'Account.Name' or 'CreatedBy.Email'."
                    },
                    "operator": { "type": "string", "enum": ["equals", "notEquals", "greaterThan", "lessThan", "greaterOrEqual", "lessOrEqual", "contains", "notContains", "startsWith", "endsWith", "in", "notIn", "between", "isNull", "isNotNull"], "description": "Comparison operator." },
                    "value": { "type": ["string", "number", "boolean", "array", "object", "null"], "description": "Single value for comparison (can be null)." },
                    "values": { "type": "array", "items": { "type": ["string", "number", "boolean", "null"] }, "nullable": true, "description": "Multiple values for 'in', 'notIn', 'between' operators (usually strings, numbers, booleans, or null)." }
                  },
                  "required": ["field", "operator"]
                },
                "description": "List of filter conditions."
              },
              "logic": { "type": "string", "optional": true, "description": "Logical combination of conditions (e.g., '1 AND (2 OR 3)'). Defaults to AND if multiple conditions exist." },
              "orderBy": { "type": "array", "items": { "type": "object", "properties": { "field": { "type": "string" }, "direction": { "type": "string", "enum": ["ASC", "DESC"] } }, "required": ["field"] }, "optional": true, "description": "Sorting criteria." },
              "limit": { "type": "number", "optional": true, "description": "Maximum number of records. Defaults usually apply." },
              "offset": { "type": "number", "optional": true, "description": "Number of records to skip (pagination)." },
              "includeFields": { "type": "array", "items": { "type": "string" }, "optional": true, "description": "Specific fields to return. If omitted, default fields are returned." },
              "excludeFields": { "type": "array", "items": { "type": "string" }, "optional": true, "description": "Specific fields to exclude." },
              "timeFrame": { "type": "string", "optional": true, "description": "Predefined time frame (e.g., 'last7days')." },
              "groupBy": { "type": "array", "items": { "type": "string" }, "optional": true, "description": "Fields for grouping results." },
              "aggregate": { "type": "array", "items": { "type": "object", "properties": { "function": { "type": "string", "enum": ["SUM", "AVG", "COUNT", "MIN", "MAX"] }, "field": { "type": "string" }, "alias": { "type": "string" } }, "required": ["function", "field"] }, "optional": true, "description": "Aggregation functions." },
              "includeDeleted": { "type": "boolean", "optional": true, "description": "Include deleted records? Defaults to false." }
            }
          },
          "fields": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Optional: Specific fields to include in the results, alternative to 'filters.includeFields'.",
            "optional": true
          }
        },
        "required": ["operation", "entityType"]
      }
    },
    "required": ["input"]
  }
},
    {
  "name": "create_entity",
  "description": "Use for business records. Create a new Salesforce record like an Account, Contact, Lead, Deal, or a support Case.",
  "providerConfigKey": "salesforce-2",
  "category": "CRM",
  "parameters": {
    "type": "object",
    "properties": {
      "operation": { "type": "string", "enum": ["create"], "description": "Operation must be 'create'." },
      "entityType": { "type": "string", "enum": ["Account", "Contact", "Lead", "Deal", "Article", "Case"], "description": "Type of Salesforce object to create." },
      "fields": {
        "type": "object",
        "description": "Use for creating a SINGLE record. Key-value pairs of fields for the new record.",
        "optional": true
      },
      "records": {
        "type": "array",
        "items": { "type": "object" },
        "description": "Use for creating MULTIPLE records in a batch. An array of record objects.",
        "optional": true
      }
    },
    "required": ["operation", "entityType"]
  }
},
    {
  "name": "update_entity",
  "description": "Update existing Salesforce record(s). Use 'identifier' to update a SINGLE record. Use 'records' for MULTIPLE records in a batch.",
  "providerConfigKey": "salesforce-2",
  "category": "CRM",
  "parameters": {
    "type": "object",
    "properties": {
      "operation": {
        "type": "string",
        "enum": ["update", "batch_update"],
        "description": "Use 'update' for a single record, 'batch_update' for multiple."
      },
      "entityType": {
        "type": "string",
        "enum": ["Account", "Contact", "Lead", "Deal", "Article", "Case"],
        "description": "The type of Salesforce object to update."
      },
      "identifier": {
        "type": "string",
        "optional": true,
        "description": "Use for a SINGLE record update. The value used to find the record (e.g., a record ID, Name, or Email)."
      },
      "identifierType": {
        "type": "string",
        "enum": ["Id", "Name", "Email", "ExternalId"],
        "optional": true,
        "description": "The type of field the 'identifier' refers to. Defaults to 'Id' if not provided."
      },
      "fields": {
        "type": "object",
        "minProperties": 1,
        "description": "Use for a SINGLE record update. Key-value pairs of fields and their new values.",
        "optional": true
      },
      "records": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "The value used to find the record (e.g., a record ID, Name, or Email)."
            },
            "identifierType": {
              "type": "string",
              "enum": ["Id", "Name", "Email", "ExternalId"],
              "optional": true,
              "description": "The type of field the 'identifier' refers to. Defaults to 'Id'."
            },
            "fields": {
              "type": "object",
              "description": "Key-value pairs of fields and their new values."
            }
          },
          "required": ["identifier", "fields"]
        },
        "description": "Use for a BATCH update. An array of objects, each with an 'identifier', 'fields', and optional 'identifierType'.",
        "optional": true
      }
    },
    "required": ["operation", "entityType"]
  }
}
  ],
  "beats": [],
  "providers": {
    "google-mail": {
      "endpoint": "gmail",
      "provider_config_key": "google-mail",
      "connection_id": "e5bce133-e6df-4cb7-9fb1-ec1d48023079",
      "objects": ["Message"]
    },
    "google-calendar": {
      "endpoint": "calendar",
      "provider_config_key": "google-calendar",
      "connection_id": "30009351-89b2-4546-9367-bce987d6d79d",
      "objects": ["Calendar", "Event"]
    },
    "salesforce-2": {
      "endpoint": "salesforce",
      "provider_config_key": "salesforce-2",
      "connection_id": "2afdea8f-9c5a-4555-9e88-6c440e59c037",
      "objects": ["Account", "Contact", "Lead", "Deal", "Article", "Case"]
    }
  }
}